/*
 * This file is generated by jOOQ.
 */
package com.okeicalm.simpleJournalEntry.infra.db.tables.records


import com.okeicalm.simpleJournalEntry.infra.db.tables.Articles

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ArticlesRecord() : UpdatableRecordImpl<ArticlesRecord>(Articles.ARTICLES), Record6<Long?, Long?, String?, String?, LocalDate?, LocalDate?> {

    var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    var accountId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var content: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    var createdAt: LocalDate?
        set(value): Unit = set(4, value)
        get(): LocalDate? = get(4) as LocalDate?

    var updatedAt: LocalDate?
        set(value): Unit = set(5, value)
        get(): LocalDate? = get(5) as LocalDate?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Long?, Long?, String?, String?, LocalDate?, LocalDate?> = super.fieldsRow() as Row6<Long?, Long?, String?, String?, LocalDate?, LocalDate?>
    override fun valuesRow(): Row6<Long?, Long?, String?, String?, LocalDate?, LocalDate?> = super.valuesRow() as Row6<Long?, Long?, String?, String?, LocalDate?, LocalDate?>
    override fun field1(): Field<Long?> = Articles.ARTICLES.ID
    override fun field2(): Field<Long?> = Articles.ARTICLES.ACCOUNT_ID
    override fun field3(): Field<String?> = Articles.ARTICLES.TITLE
    override fun field4(): Field<String?> = Articles.ARTICLES.CONTENT
    override fun field5(): Field<LocalDate?> = Articles.ARTICLES.CREATED_AT
    override fun field6(): Field<LocalDate?> = Articles.ARTICLES.UPDATED_AT
    override fun component1(): Long? = id
    override fun component2(): Long? = accountId
    override fun component3(): String? = title
    override fun component4(): String? = content
    override fun component5(): LocalDate? = createdAt
    override fun component6(): LocalDate? = updatedAt
    override fun value1(): Long? = id
    override fun value2(): Long? = accountId
    override fun value3(): String? = title
    override fun value4(): String? = content
    override fun value5(): LocalDate? = createdAt
    override fun value6(): LocalDate? = updatedAt

    override fun value1(value: Long?): ArticlesRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): ArticlesRecord {
        this.accountId = value
        return this
    }

    override fun value3(value: String?): ArticlesRecord {
        this.title = value
        return this
    }

    override fun value4(value: String?): ArticlesRecord {
        this.content = value
        return this
    }

    override fun value5(value: LocalDate?): ArticlesRecord {
        this.createdAt = value
        return this
    }

    override fun value6(value: LocalDate?): ArticlesRecord {
        this.updatedAt = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: String?, value4: String?, value5: LocalDate?, value6: LocalDate?): ArticlesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised ArticlesRecord
     */
    constructor(id: Long? = null, accountId: Long? = null, title: String? = null, content: String? = null, createdAt: LocalDate? = null, updatedAt: LocalDate? = null): this() {
        this.id = id
        this.accountId = accountId
        this.title = title
        this.content = content
        this.createdAt = createdAt
        this.updatedAt = updatedAt
    }
}
